//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Metadatos de relaciones en EDM

[assembly: EdmRelationshipAttribute("KanbanModel", "FK_USUARIOSxBOARD_BOARDS", "BOARDS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Kanban_board_project.App_Data.BOARD), "USUARIOSxBOARD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kanban_board_project.App_Data.USUARIOSxBOARD), true)]
[assembly: EdmRelationshipAttribute("KanbanModel", "FK_CARDS_PRIORIDADES", "PRIORIDADES", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Kanban_board_project.App_Data.PRIORIDADE), "CARDS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kanban_board_project.App_Data.CARD), true)]
[assembly: EdmRelationshipAttribute("KanbanModel", "FK_CARDS_TIPO", "TIPO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Kanban_board_project.App_Data.TIPO), "CARDS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kanban_board_project.App_Data.CARD), true)]
[assembly: EdmRelationshipAttribute("KanbanModel", "FK_CARDSxUSUARIOS_CARDS", "CARDS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Kanban_board_project.App_Data.CARD), "CARDSxUSUARIOS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kanban_board_project.App_Data.CARDSxUSUARIO), true)]
[assembly: EdmRelationshipAttribute("KanbanModel", "FK_USUARIOSxBOARD_ROLE", "ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Kanban_board_project.App_Data.ROLE), "USUARIOSxBOARD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kanban_board_project.App_Data.USUARIOSxBOARD), true)]
[assembly: EdmRelationshipAttribute("KanbanModel", "FK_USUARIOSxBOARD_USUARIOS", "USUARIOS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Kanban_board_project.App_Data.USUARIO), "USUARIOSxBOARD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kanban_board_project.App_Data.USUARIOSxBOARD), true)]
[assembly: EdmRelationshipAttribute("KanbanModel", "CARDSxCOLUMNAS", "CARDS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kanban_board_project.App_Data.CARD), "COLUMNA", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kanban_board_project.App_Data.COLUMNA))]

#endregion

namespace Kanban_board_project.App_Data
{
    #region Contextos
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    public partial class KanbanEntities : ObjectContext
    {
        #region Constructores
    
        /// <summary>
        /// Inicializa un nuevo objeto KanbanEntities usando la cadena de conexión encontrada en la sección 'KanbanEntities' del archivo de configuración de la aplicación.
        /// </summary>
        public KanbanEntities() : base("name=KanbanEntities", "KanbanEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto KanbanEntities.
        /// </summary>
        public KanbanEntities(string connectionString) : base(connectionString, "KanbanEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto KanbanEntities.
        /// </summary>
        public KanbanEntities(EntityConnection connection) : base(connection, "KanbanEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Métodos parciales
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propiedades de ObjectSet
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<BOARD> BOARDS
        {
            get
            {
                if ((_BOARDS == null))
                {
                    _BOARDS = base.CreateObjectSet<BOARD>("BOARDS");
                }
                return _BOARDS;
            }
        }
        private ObjectSet<BOARD> _BOARDS;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<CARD> CARDS
        {
            get
            {
                if ((_CARDS == null))
                {
                    _CARDS = base.CreateObjectSet<CARD>("CARDS");
                }
                return _CARDS;
            }
        }
        private ObjectSet<CARD> _CARDS;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<CARDSxUSUARIO> CARDSxUSUARIOS
        {
            get
            {
                if ((_CARDSxUSUARIOS == null))
                {
                    _CARDSxUSUARIOS = base.CreateObjectSet<CARDSxUSUARIO>("CARDSxUSUARIOS");
                }
                return _CARDSxUSUARIOS;
            }
        }
        private ObjectSet<CARDSxUSUARIO> _CARDSxUSUARIOS;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<COLUMNA> COLUMNAs
        {
            get
            {
                if ((_COLUMNAs == null))
                {
                    _COLUMNAs = base.CreateObjectSet<COLUMNA>("COLUMNAs");
                }
                return _COLUMNAs;
            }
        }
        private ObjectSet<COLUMNA> _COLUMNAs;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<PRIORIDADE> PRIORIDADES
        {
            get
            {
                if ((_PRIORIDADES == null))
                {
                    _PRIORIDADES = base.CreateObjectSet<PRIORIDADE>("PRIORIDADES");
                }
                return _PRIORIDADES;
            }
        }
        private ObjectSet<PRIORIDADE> _PRIORIDADES;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<ROLE> ROLEs
        {
            get
            {
                if ((_ROLEs == null))
                {
                    _ROLEs = base.CreateObjectSet<ROLE>("ROLEs");
                }
                return _ROLEs;
            }
        }
        private ObjectSet<ROLE> _ROLEs;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<TIPO> TIPOes
        {
            get
            {
                if ((_TIPOes == null))
                {
                    _TIPOes = base.CreateObjectSet<TIPO>("TIPOes");
                }
                return _TIPOes;
            }
        }
        private ObjectSet<TIPO> _TIPOes;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<USUARIO> USUARIOS
        {
            get
            {
                if ((_USUARIOS == null))
                {
                    _USUARIOS = base.CreateObjectSet<USUARIO>("USUARIOS");
                }
                return _USUARIOS;
            }
        }
        private ObjectSet<USUARIO> _USUARIOS;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<USUARIOSxBOARD> USUARIOSxBOARDs
        {
            get
            {
                if ((_USUARIOSxBOARDs == null))
                {
                    _USUARIOSxBOARDs = base.CreateObjectSet<USUARIOSxBOARD>("USUARIOSxBOARDs");
                }
                return _USUARIOSxBOARDs;
            }
        }
        private ObjectSet<USUARIOSxBOARD> _USUARIOSxBOARDs;

        #endregion

        #region Métodos AddTo
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet BOARDS. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToBOARDS(BOARD bOARD)
        {
            base.AddObject("BOARDS", bOARD);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet CARDS. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToCARDS(CARD cARD)
        {
            base.AddObject("CARDS", cARD);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet CARDSxUSUARIOS. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToCARDSxUSUARIOS(CARDSxUSUARIO cARDSxUSUARIO)
        {
            base.AddObject("CARDSxUSUARIOS", cARDSxUSUARIO);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet COLUMNAs. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToCOLUMNAs(COLUMNA cOLUMNA)
        {
            base.AddObject("COLUMNAs", cOLUMNA);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet PRIORIDADES. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToPRIORIDADES(PRIORIDADE pRIORIDADE)
        {
            base.AddObject("PRIORIDADES", pRIORIDADE);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet ROLEs. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToROLEs(ROLE rOLE)
        {
            base.AddObject("ROLEs", rOLE);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet sysdiagrams. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet TIPOes. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToTIPOes(TIPO tIPO)
        {
            base.AddObject("TIPOes", tIPO);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet USUARIOS. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToUSUARIOS(USUARIO uSUARIO)
        {
            base.AddObject("USUARIOS", uSUARIO);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet USUARIOSxBOARDs. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToUSUARIOSxBOARDs(USUARIOSxBOARD uSUARIOSxBOARD)
        {
            base.AddObject("USUARIOSxBOARDs", uSUARIOSxBOARD);
        }

        #endregion

    }

    #endregion

    #region Entidades
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KanbanModel", Name="BOARD")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BOARD : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto BOARD.
        /// </summary>
        /// <param name="iDBOARD">Valor inicial de la propiedad IDBOARD.</param>
        /// <param name="nOMBRE">Valor inicial de la propiedad NOMBRE.</param>
        /// <param name="cOLUMNAS">Valor inicial de la propiedad COLUMNAS.</param>
        public static BOARD CreateBOARD(global::System.Int32 iDBOARD, global::System.String nOMBRE, global::System.Int32 cOLUMNAS)
        {
            BOARD bOARD = new BOARD();
            bOARD.IDBOARD = iDBOARD;
            bOARD.NOMBRE = nOMBRE;
            bOARD.COLUMNAS = cOLUMNAS;
            return bOARD;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDBOARD
        {
            get
            {
                return _IDBOARD;
            }
            set
            {
                if (_IDBOARD != value)
                {
                    OnIDBOARDChanging(value);
                    ReportPropertyChanging("IDBOARD");
                    _IDBOARD = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDBOARD");
                    OnIDBOARDChanged();
                }
            }
        }
        private global::System.Int32 _IDBOARD;
        partial void OnIDBOARDChanging(global::System.Int32 value);
        partial void OnIDBOARDChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOMBRE
        {
            get
            {
                return _NOMBRE;
            }
            set
            {
                OnNOMBREChanging(value);
                ReportPropertyChanging("NOMBRE");
                _NOMBRE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOMBRE");
                OnNOMBREChanged();
            }
        }
        private global::System.String _NOMBRE;
        partial void OnNOMBREChanging(global::System.String value);
        partial void OnNOMBREChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FECHAINICIO
        {
            get
            {
                return _FECHAINICIO;
            }
            set
            {
                OnFECHAINICIOChanging(value);
                ReportPropertyChanging("FECHAINICIO");
                _FECHAINICIO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FECHAINICIO");
                OnFECHAINICIOChanged();
            }
        }
        private global::System.String _FECHAINICIO;
        partial void OnFECHAINICIOChanging(global::System.String value);
        partial void OnFECHAINICIOChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 COLUMNAS
        {
            get
            {
                return _COLUMNAS;
            }
            set
            {
                OnCOLUMNASChanging(value);
                ReportPropertyChanging("COLUMNAS");
                _COLUMNAS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("COLUMNAS");
                OnCOLUMNASChanged();
            }
        }
        private global::System.Int32 _COLUMNAS;
        partial void OnCOLUMNASChanging(global::System.Int32 value);
        partial void OnCOLUMNASChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanbanModel", "FK_USUARIOSxBOARD_BOARDS", "USUARIOSxBOARD")]
        public EntityCollection<USUARIOSxBOARD> USUARIOSxBOARDs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<USUARIOSxBOARD>("KanbanModel.FK_USUARIOSxBOARD_BOARDS", "USUARIOSxBOARD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<USUARIOSxBOARD>("KanbanModel.FK_USUARIOSxBOARD_BOARDS", "USUARIOSxBOARD", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KanbanModel", Name="CARD")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CARD : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto CARD.
        /// </summary>
        /// <param name="iDCARD">Valor inicial de la propiedad IDCARD.</param>
        /// <param name="nOMBRE">Valor inicial de la propiedad NOMBRE.</param>
        /// <param name="fECHAINICIO">Valor inicial de la propiedad FECHAINICIO.</param>
        /// <param name="fECHAFINAL">Valor inicial de la propiedad FECHAFINAL.</param>
        /// <param name="cOLOR">Valor inicial de la propiedad COLOR.</param>
        /// <param name="pRIORIDAD">Valor inicial de la propiedad PRIORIDAD.</param>
        /// <param name="tIPO">Valor inicial de la propiedad TIPO.</param>
        public static CARD CreateCARD(global::System.Int32 iDCARD, global::System.String nOMBRE, global::System.String fECHAINICIO, global::System.String fECHAFINAL, global::System.String cOLOR, global::System.Int32 pRIORIDAD, global::System.Int32 tIPO)
        {
            CARD cARD = new CARD();
            cARD.IDCARD = iDCARD;
            cARD.NOMBRE = nOMBRE;
            cARD.FECHAINICIO = fECHAINICIO;
            cARD.FECHAFINAL = fECHAFINAL;
            cARD.COLOR = cOLOR;
            cARD.PRIORIDAD = pRIORIDAD;
            cARD.TIPO = tIPO;
            return cARD;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDCARD
        {
            get
            {
                return _IDCARD;
            }
            set
            {
                if (_IDCARD != value)
                {
                    OnIDCARDChanging(value);
                    ReportPropertyChanging("IDCARD");
                    _IDCARD = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDCARD");
                    OnIDCARDChanged();
                }
            }
        }
        private global::System.Int32 _IDCARD;
        partial void OnIDCARDChanging(global::System.Int32 value);
        partial void OnIDCARDChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOMBRE
        {
            get
            {
                return _NOMBRE;
            }
            set
            {
                OnNOMBREChanging(value);
                ReportPropertyChanging("NOMBRE");
                _NOMBRE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOMBRE");
                OnNOMBREChanged();
            }
        }
        private global::System.String _NOMBRE;
        partial void OnNOMBREChanging(global::System.String value);
        partial void OnNOMBREChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPCION
        {
            get
            {
                return _DESCRIPCION;
            }
            set
            {
                OnDESCRIPCIONChanging(value);
                ReportPropertyChanging("DESCRIPCION");
                _DESCRIPCION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DESCRIPCION");
                OnDESCRIPCIONChanged();
            }
        }
        private global::System.String _DESCRIPCION;
        partial void OnDESCRIPCIONChanging(global::System.String value);
        partial void OnDESCRIPCIONChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FECHAINICIO
        {
            get
            {
                return _FECHAINICIO;
            }
            set
            {
                OnFECHAINICIOChanging(value);
                ReportPropertyChanging("FECHAINICIO");
                _FECHAINICIO = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FECHAINICIO");
                OnFECHAINICIOChanged();
            }
        }
        private global::System.String _FECHAINICIO;
        partial void OnFECHAINICIOChanging(global::System.String value);
        partial void OnFECHAINICIOChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FECHAFINAL
        {
            get
            {
                return _FECHAFINAL;
            }
            set
            {
                OnFECHAFINALChanging(value);
                ReportPropertyChanging("FECHAFINAL");
                _FECHAFINAL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FECHAFINAL");
                OnFECHAFINALChanged();
            }
        }
        private global::System.String _FECHAFINAL;
        partial void OnFECHAFINALChanging(global::System.String value);
        partial void OnFECHAFINALChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COLOR
        {
            get
            {
                return _COLOR;
            }
            set
            {
                OnCOLORChanging(value);
                ReportPropertyChanging("COLOR");
                _COLOR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("COLOR");
                OnCOLORChanged();
            }
        }
        private global::System.String _COLOR;
        partial void OnCOLORChanging(global::System.String value);
        partial void OnCOLORChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PRIORIDAD
        {
            get
            {
                return _PRIORIDAD;
            }
            set
            {
                OnPRIORIDADChanging(value);
                ReportPropertyChanging("PRIORIDAD");
                _PRIORIDAD = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRIORIDAD");
                OnPRIORIDADChanged();
            }
        }
        private global::System.Int32 _PRIORIDAD;
        partial void OnPRIORIDADChanging(global::System.Int32 value);
        partial void OnPRIORIDADChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TIPO
        {
            get
            {
                return _TIPO;
            }
            set
            {
                OnTIPOChanging(value);
                ReportPropertyChanging("TIPO");
                _TIPO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TIPO");
                OnTIPOChanged();
            }
        }
        private global::System.Int32 _TIPO;
        partial void OnTIPOChanging(global::System.Int32 value);
        partial void OnTIPOChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanbanModel", "FK_CARDS_PRIORIDADES", "PRIORIDADES")]
        public PRIORIDADE PRIORIDADE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PRIORIDADE>("KanbanModel.FK_CARDS_PRIORIDADES", "PRIORIDADES").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PRIORIDADE>("KanbanModel.FK_CARDS_PRIORIDADES", "PRIORIDADES").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PRIORIDADE> PRIORIDADEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PRIORIDADE>("KanbanModel.FK_CARDS_PRIORIDADES", "PRIORIDADES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PRIORIDADE>("KanbanModel.FK_CARDS_PRIORIDADES", "PRIORIDADES", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanbanModel", "FK_CARDS_TIPO", "TIPO")]
        public TIPO TIPO1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TIPO>("KanbanModel.FK_CARDS_TIPO", "TIPO").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TIPO>("KanbanModel.FK_CARDS_TIPO", "TIPO").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TIPO> TIPO1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TIPO>("KanbanModel.FK_CARDS_TIPO", "TIPO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TIPO>("KanbanModel.FK_CARDS_TIPO", "TIPO", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanbanModel", "FK_CARDSxUSUARIOS_CARDS", "CARDSxUSUARIOS")]
        public EntityCollection<CARDSxUSUARIO> CARDSxUSUARIOS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CARDSxUSUARIO>("KanbanModel.FK_CARDSxUSUARIOS_CARDS", "CARDSxUSUARIOS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CARDSxUSUARIO>("KanbanModel.FK_CARDSxUSUARIOS_CARDS", "CARDSxUSUARIOS", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanbanModel", "CARDSxCOLUMNAS", "COLUMNA")]
        public EntityCollection<COLUMNA> COLUMNAs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<COLUMNA>("KanbanModel.CARDSxCOLUMNAS", "COLUMNA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<COLUMNA>("KanbanModel.CARDSxCOLUMNAS", "COLUMNA", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KanbanModel", Name="CARDSxUSUARIO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CARDSxUSUARIO : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto CARDSxUSUARIO.
        /// </summary>
        /// <param name="iDCARD">Valor inicial de la propiedad IDCARD.</param>
        /// <param name="iDUSUARIO">Valor inicial de la propiedad IDUSUARIO.</param>
        public static CARDSxUSUARIO CreateCARDSxUSUARIO(global::System.Int32 iDCARD, global::System.Int32 iDUSUARIO)
        {
            CARDSxUSUARIO cARDSxUSUARIO = new CARDSxUSUARIO();
            cARDSxUSUARIO.IDCARD = iDCARD;
            cARDSxUSUARIO.IDUSUARIO = iDUSUARIO;
            return cARDSxUSUARIO;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDCARD
        {
            get
            {
                return _IDCARD;
            }
            set
            {
                if (_IDCARD != value)
                {
                    OnIDCARDChanging(value);
                    ReportPropertyChanging("IDCARD");
                    _IDCARD = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDCARD");
                    OnIDCARDChanged();
                }
            }
        }
        private global::System.Int32 _IDCARD;
        partial void OnIDCARDChanging(global::System.Int32 value);
        partial void OnIDCARDChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDUSUARIO
        {
            get
            {
                return _IDUSUARIO;
            }
            set
            {
                if (_IDUSUARIO != value)
                {
                    OnIDUSUARIOChanging(value);
                    ReportPropertyChanging("IDUSUARIO");
                    _IDUSUARIO = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDUSUARIO");
                    OnIDUSUARIOChanged();
                }
            }
        }
        private global::System.Int32 _IDUSUARIO;
        partial void OnIDUSUARIOChanging(global::System.Int32 value);
        partial void OnIDUSUARIOChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanbanModel", "FK_CARDSxUSUARIOS_CARDS", "CARDS")]
        public CARD CARD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CARD>("KanbanModel.FK_CARDSxUSUARIOS_CARDS", "CARDS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CARD>("KanbanModel.FK_CARDSxUSUARIOS_CARDS", "CARDS").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CARD> CARDReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CARD>("KanbanModel.FK_CARDSxUSUARIOS_CARDS", "CARDS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CARD>("KanbanModel.FK_CARDSxUSUARIOS_CARDS", "CARDS", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KanbanModel", Name="COLUMNA")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COLUMNA : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto COLUMNA.
        /// </summary>
        /// <param name="iDCOLUMNA">Valor inicial de la propiedad IDCOLUMNA.</param>
        /// <param name="iDBOARD">Valor inicial de la propiedad IDBOARD.</param>
        /// <param name="pOSICION">Valor inicial de la propiedad POSICION.</param>
        /// <param name="nOMBRE">Valor inicial de la propiedad NOMBRE.</param>
        /// <param name="wHIPLIMITE">Valor inicial de la propiedad WHIPLIMITE.</param>
        public static COLUMNA CreateCOLUMNA(global::System.Int32 iDCOLUMNA, global::System.Int32 iDBOARD, global::System.Int32 pOSICION, global::System.String nOMBRE, global::System.Int32 wHIPLIMITE)
        {
            COLUMNA cOLUMNA = new COLUMNA();
            cOLUMNA.IDCOLUMNA = iDCOLUMNA;
            cOLUMNA.IDBOARD = iDBOARD;
            cOLUMNA.POSICION = pOSICION;
            cOLUMNA.NOMBRE = nOMBRE;
            cOLUMNA.WHIPLIMITE = wHIPLIMITE;
            return cOLUMNA;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDCOLUMNA
        {
            get
            {
                return _IDCOLUMNA;
            }
            set
            {
                if (_IDCOLUMNA != value)
                {
                    OnIDCOLUMNAChanging(value);
                    ReportPropertyChanging("IDCOLUMNA");
                    _IDCOLUMNA = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDCOLUMNA");
                    OnIDCOLUMNAChanged();
                }
            }
        }
        private global::System.Int32 _IDCOLUMNA;
        partial void OnIDCOLUMNAChanging(global::System.Int32 value);
        partial void OnIDCOLUMNAChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDBOARD
        {
            get
            {
                return _IDBOARD;
            }
            set
            {
                OnIDBOARDChanging(value);
                ReportPropertyChanging("IDBOARD");
                _IDBOARD = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDBOARD");
                OnIDBOARDChanged();
            }
        }
        private global::System.Int32 _IDBOARD;
        partial void OnIDBOARDChanging(global::System.Int32 value);
        partial void OnIDBOARDChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 POSICION
        {
            get
            {
                return _POSICION;
            }
            set
            {
                OnPOSICIONChanging(value);
                ReportPropertyChanging("POSICION");
                _POSICION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POSICION");
                OnPOSICIONChanged();
            }
        }
        private global::System.Int32 _POSICION;
        partial void OnPOSICIONChanging(global::System.Int32 value);
        partial void OnPOSICIONChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOMBRE
        {
            get
            {
                return _NOMBRE;
            }
            set
            {
                OnNOMBREChanging(value);
                ReportPropertyChanging("NOMBRE");
                _NOMBRE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOMBRE");
                OnNOMBREChanged();
            }
        }
        private global::System.String _NOMBRE;
        partial void OnNOMBREChanging(global::System.String value);
        partial void OnNOMBREChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WHIPLIMITE
        {
            get
            {
                return _WHIPLIMITE;
            }
            set
            {
                OnWHIPLIMITEChanging(value);
                ReportPropertyChanging("WHIPLIMITE");
                _WHIPLIMITE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WHIPLIMITE");
                OnWHIPLIMITEChanged();
            }
        }
        private global::System.Int32 _WHIPLIMITE;
        partial void OnWHIPLIMITEChanging(global::System.Int32 value);
        partial void OnWHIPLIMITEChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanbanModel", "CARDSxCOLUMNAS", "CARDS")]
        public EntityCollection<CARD> CARDS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CARD>("KanbanModel.CARDSxCOLUMNAS", "CARDS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CARD>("KanbanModel.CARDSxCOLUMNAS", "CARDS", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KanbanModel", Name="PRIORIDADE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PRIORIDADE : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto PRIORIDADE.
        /// </summary>
        /// <param name="iDPRIORIDADES">Valor inicial de la propiedad IDPRIORIDADES.</param>
        public static PRIORIDADE CreatePRIORIDADE(global::System.Int32 iDPRIORIDADES)
        {
            PRIORIDADE pRIORIDADE = new PRIORIDADE();
            pRIORIDADE.IDPRIORIDADES = iDPRIORIDADES;
            return pRIORIDADE;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDPRIORIDADES
        {
            get
            {
                return _IDPRIORIDADES;
            }
            set
            {
                if (_IDPRIORIDADES != value)
                {
                    OnIDPRIORIDADESChanging(value);
                    ReportPropertyChanging("IDPRIORIDADES");
                    _IDPRIORIDADES = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDPRIORIDADES");
                    OnIDPRIORIDADESChanged();
                }
            }
        }
        private global::System.Int32 _IDPRIORIDADES;
        partial void OnIDPRIORIDADESChanging(global::System.Int32 value);
        partial void OnIDPRIORIDADESChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PRIORIDAD
        {
            get
            {
                return _PRIORIDAD;
            }
            set
            {
                OnPRIORIDADChanging(value);
                ReportPropertyChanging("PRIORIDAD");
                _PRIORIDAD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PRIORIDAD");
                OnPRIORIDADChanged();
            }
        }
        private global::System.String _PRIORIDAD;
        partial void OnPRIORIDADChanging(global::System.String value);
        partial void OnPRIORIDADChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanbanModel", "FK_CARDS_PRIORIDADES", "CARDS")]
        public EntityCollection<CARD> CARDS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CARD>("KanbanModel.FK_CARDS_PRIORIDADES", "CARDS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CARD>("KanbanModel.FK_CARDS_PRIORIDADES", "CARDS", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KanbanModel", Name="ROLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ROLE : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto ROLE.
        /// </summary>
        /// <param name="iDROLE">Valor inicial de la propiedad IDROLE.</param>
        /// <param name="rOLE1">Valor inicial de la propiedad ROLE1.</param>
        public static ROLE CreateROLE(global::System.Int32 iDROLE, global::System.String rOLE1)
        {
            ROLE rOLE = new ROLE();
            rOLE.IDROLE = iDROLE;
            rOLE.ROLE1 = rOLE1;
            return rOLE;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDROLE
        {
            get
            {
                return _IDROLE;
            }
            set
            {
                if (_IDROLE != value)
                {
                    OnIDROLEChanging(value);
                    ReportPropertyChanging("IDROLE");
                    _IDROLE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDROLE");
                    OnIDROLEChanged();
                }
            }
        }
        private global::System.Int32 _IDROLE;
        partial void OnIDROLEChanging(global::System.Int32 value);
        partial void OnIDROLEChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ROLE1
        {
            get
            {
                return _ROLE1;
            }
            set
            {
                OnROLE1Changing(value);
                ReportPropertyChanging("ROLE1");
                _ROLE1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ROLE1");
                OnROLE1Changed();
            }
        }
        private global::System.String _ROLE1;
        partial void OnROLE1Changing(global::System.String value);
        partial void OnROLE1Changed();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanbanModel", "FK_USUARIOSxBOARD_ROLE", "USUARIOSxBOARD")]
        public EntityCollection<USUARIOSxBOARD> USUARIOSxBOARDs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<USUARIOSxBOARD>("KanbanModel.FK_USUARIOSxBOARD_ROLE", "USUARIOSxBOARD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<USUARIOSxBOARD>("KanbanModel.FK_USUARIOSxBOARD_ROLE", "USUARIOSxBOARD", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KanbanModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto sysdiagram.
        /// </summary>
        /// <param name="name">Valor inicial de la propiedad name.</param>
        /// <param name="principal_id">Valor inicial de la propiedad principal_id.</param>
        /// <param name="diagram_id">Valor inicial de la propiedad diagram_id.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KanbanModel", Name="TIPO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TIPO : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto TIPO.
        /// </summary>
        /// <param name="iDTIPOS">Valor inicial de la propiedad IDTIPOS.</param>
        /// <param name="tIPO1">Valor inicial de la propiedad TIPO1.</param>
        public static TIPO CreateTIPO(global::System.Int32 iDTIPOS, global::System.String tIPO1)
        {
            TIPO tIPO = new TIPO();
            tIPO.IDTIPOS = iDTIPOS;
            tIPO.TIPO1 = tIPO1;
            return tIPO;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDTIPOS
        {
            get
            {
                return _IDTIPOS;
            }
            set
            {
                if (_IDTIPOS != value)
                {
                    OnIDTIPOSChanging(value);
                    ReportPropertyChanging("IDTIPOS");
                    _IDTIPOS = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDTIPOS");
                    OnIDTIPOSChanged();
                }
            }
        }
        private global::System.Int32 _IDTIPOS;
        partial void OnIDTIPOSChanging(global::System.Int32 value);
        partial void OnIDTIPOSChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TIPO1
        {
            get
            {
                return _TIPO1;
            }
            set
            {
                OnTIPO1Changing(value);
                ReportPropertyChanging("TIPO1");
                _TIPO1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TIPO1");
                OnTIPO1Changed();
            }
        }
        private global::System.String _TIPO1;
        partial void OnTIPO1Changing(global::System.String value);
        partial void OnTIPO1Changed();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanbanModel", "FK_CARDS_TIPO", "CARDS")]
        public EntityCollection<CARD> CARDS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CARD>("KanbanModel.FK_CARDS_TIPO", "CARDS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CARD>("KanbanModel.FK_CARDS_TIPO", "CARDS", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KanbanModel", Name="USUARIO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class USUARIO : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto USUARIO.
        /// </summary>
        /// <param name="iDUSUARIO">Valor inicial de la propiedad IDUSUARIO.</param>
        public static USUARIO CreateUSUARIO(global::System.Int32 iDUSUARIO)
        {
            USUARIO uSUARIO = new USUARIO();
            uSUARIO.IDUSUARIO = iDUSUARIO;
            return uSUARIO;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDUSUARIO
        {
            get
            {
                return _IDUSUARIO;
            }
            set
            {
                if (_IDUSUARIO != value)
                {
                    OnIDUSUARIOChanging(value);
                    ReportPropertyChanging("IDUSUARIO");
                    _IDUSUARIO = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDUSUARIO");
                    OnIDUSUARIOChanged();
                }
            }
        }
        private global::System.Int32 _IDUSUARIO;
        partial void OnIDUSUARIOChanging(global::System.Int32 value);
        partial void OnIDUSUARIOChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NOMBRE
        {
            get
            {
                return _NOMBRE;
            }
            set
            {
                OnNOMBREChanging(value);
                ReportPropertyChanging("NOMBRE");
                _NOMBRE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NOMBRE");
                OnNOMBREChanged();
            }
        }
        private global::System.String _NOMBRE;
        partial void OnNOMBREChanging(global::System.String value);
        partial void OnNOMBREChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PROFECION
        {
            get
            {
                return _PROFECION;
            }
            set
            {
                OnPROFECIONChanging(value);
                ReportPropertyChanging("PROFECION");
                _PROFECION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PROFECION");
                OnPROFECIONChanged();
            }
        }
        private global::System.String _PROFECION;
        partial void OnPROFECIONChanging(global::System.String value);
        partial void OnPROFECIONChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] PICTURE
        {
            get
            {
                return StructuralObject.GetValidValue(_PICTURE);
            }
            set
            {
                OnPICTUREChanging(value);
                ReportPropertyChanging("PICTURE");
                _PICTURE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PICTURE");
                OnPICTUREChanged();
            }
        }
        private global::System.Byte[] _PICTURE;
        partial void OnPICTUREChanging(global::System.Byte[] value);
        partial void OnPICTUREChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String USUARIO1
        {
            get
            {
                return _USUARIO1;
            }
            set
            {
                OnUSUARIO1Changing(value);
                ReportPropertyChanging("USUARIO1");
                _USUARIO1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("USUARIO1");
                OnUSUARIO1Changed();
            }
        }
        private global::System.String _USUARIO1;
        partial void OnUSUARIO1Changing(global::System.String value);
        partial void OnUSUARIO1Changed();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PASSWORD
        {
            get
            {
                return _PASSWORD;
            }
            set
            {
                OnPASSWORDChanging(value);
                ReportPropertyChanging("PASSWORD");
                _PASSWORD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PASSWORD");
                OnPASSWORDChanged();
            }
        }
        private global::System.String _PASSWORD;
        partial void OnPASSWORDChanging(global::System.String value);
        partial void OnPASSWORDChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CORREO
        {
            get
            {
                return _CORREO;
            }
            set
            {
                OnCORREOChanging(value);
                ReportPropertyChanging("CORREO");
                _CORREO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CORREO");
                OnCORREOChanged();
            }
        }
        private global::System.String _CORREO;
        partial void OnCORREOChanging(global::System.String value);
        partial void OnCORREOChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanbanModel", "FK_USUARIOSxBOARD_USUARIOS", "USUARIOSxBOARD")]
        public EntityCollection<USUARIOSxBOARD> USUARIOSxBOARDs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<USUARIOSxBOARD>("KanbanModel.FK_USUARIOSxBOARD_USUARIOS", "USUARIOSxBOARD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<USUARIOSxBOARD>("KanbanModel.FK_USUARIOSxBOARD_USUARIOS", "USUARIOSxBOARD", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KanbanModel", Name="USUARIOSxBOARD")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class USUARIOSxBOARD : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto USUARIOSxBOARD.
        /// </summary>
        /// <param name="iDUSUARIO">Valor inicial de la propiedad IDUSUARIO.</param>
        /// <param name="iDBOARD">Valor inicial de la propiedad IDBOARD.</param>
        /// <param name="rOLE">Valor inicial de la propiedad ROLE.</param>
        public static USUARIOSxBOARD CreateUSUARIOSxBOARD(global::System.Int32 iDUSUARIO, global::System.Int32 iDBOARD, global::System.Int32 rOLE)
        {
            USUARIOSxBOARD uSUARIOSxBOARD = new USUARIOSxBOARD();
            uSUARIOSxBOARD.IDUSUARIO = iDUSUARIO;
            uSUARIOSxBOARD.IDBOARD = iDBOARD;
            uSUARIOSxBOARD.ROLE = rOLE;
            return uSUARIOSxBOARD;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDUSUARIO
        {
            get
            {
                return _IDUSUARIO;
            }
            set
            {
                if (_IDUSUARIO != value)
                {
                    OnIDUSUARIOChanging(value);
                    ReportPropertyChanging("IDUSUARIO");
                    _IDUSUARIO = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDUSUARIO");
                    OnIDUSUARIOChanged();
                }
            }
        }
        private global::System.Int32 _IDUSUARIO;
        partial void OnIDUSUARIOChanging(global::System.Int32 value);
        partial void OnIDUSUARIOChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDBOARD
        {
            get
            {
                return _IDBOARD;
            }
            set
            {
                if (_IDBOARD != value)
                {
                    OnIDBOARDChanging(value);
                    ReportPropertyChanging("IDBOARD");
                    _IDBOARD = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDBOARD");
                    OnIDBOARDChanged();
                }
            }
        }
        private global::System.Int32 _IDBOARD;
        partial void OnIDBOARDChanging(global::System.Int32 value);
        partial void OnIDBOARDChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ROLE
        {
            get
            {
                return _ROLE;
            }
            set
            {
                if (_ROLE != value)
                {
                    OnROLEChanging(value);
                    ReportPropertyChanging("ROLE");
                    _ROLE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ROLE");
                    OnROLEChanged();
                }
            }
        }
        private global::System.Int32 _ROLE;
        partial void OnROLEChanging(global::System.Int32 value);
        partial void OnROLEChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanbanModel", "FK_USUARIOSxBOARD_BOARDS", "BOARDS")]
        public BOARD BOARD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BOARD>("KanbanModel.FK_USUARIOSxBOARD_BOARDS", "BOARDS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BOARD>("KanbanModel.FK_USUARIOSxBOARD_BOARDS", "BOARDS").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BOARD> BOARDReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BOARD>("KanbanModel.FK_USUARIOSxBOARD_BOARDS", "BOARDS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BOARD>("KanbanModel.FK_USUARIOSxBOARD_BOARDS", "BOARDS", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanbanModel", "FK_USUARIOSxBOARD_ROLE", "ROLE")]
        public ROLE ROLE1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROLE>("KanbanModel.FK_USUARIOSxBOARD_ROLE", "ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROLE>("KanbanModel.FK_USUARIOSxBOARD_ROLE", "ROLE").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ROLE> ROLE1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROLE>("KanbanModel.FK_USUARIOSxBOARD_ROLE", "ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ROLE>("KanbanModel.FK_USUARIOSxBOARD_ROLE", "ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanbanModel", "FK_USUARIOSxBOARD_USUARIOS", "USUARIOS")]
        public USUARIO USUARIO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USUARIO>("KanbanModel.FK_USUARIOSxBOARD_USUARIOS", "USUARIOS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USUARIO>("KanbanModel.FK_USUARIOSxBOARD_USUARIOS", "USUARIOS").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<USUARIO> USUARIOReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USUARIO>("KanbanModel.FK_USUARIOSxBOARD_USUARIOS", "USUARIOS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<USUARIO>("KanbanModel.FK_USUARIOSxBOARD_USUARIOS", "USUARIOS", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
